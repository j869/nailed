<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="utf-8">
  <title>Tracker</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"  integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" /> -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
  <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous"> -->
 
 
 
 
 
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="css/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/11.0.2/css/bootstrap-slider.css" integrity="sha512-SZgE3m1he0aEF3tIxxnz/3mXu/u/wlMNxQSnE0Cni9j/O8Gs+TjM9tm1NX34nRQ7GiLwUEzwuE3Wv2FLz2667w==" crossorigin="anonymous" />
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/11.0.2/bootstrap-slider.min.js" integrity="sha512-f0VlzJbcEB6KiW8ZVtL+5HWPDyW1+nJEjguZ5IVnSQkvZbwBt2RfCBY0CBO1PsMAqxxrG4Di6TfsCPP3ZRwKpA==" crossorigin="anonymous"></script>

  <style>
      #slider-div {
      display: flex;
      flex-direction: row;
      margin-top: 30px;
      }

      #slider-div>div {
      margin: 8px;
      }

      .slider-label {
      position: absolute;
      background-color: #eee;
      padding: 4px;
      font-size: 0.75rem;
      }

    /* Add this CSS class for the fixed header */
    .fixed-header {
      position: fixed;
      top: 0;
      width: 100%;
      z-index: 1000; /* Ensure the header stays above other content */
    }      
  </style>

</head>

<style>
  .fixed-header {
    background-color: #1d351d; /* Dark green background color */
    padding-left: 50px; /* Add space to the left */
    padding-right: 50px; /* Add space to the right */
  }
</style>

<div class="fixed-header">
  <header class="d-flex justify-content-between align-items-center py-3">
    <ul class="nav nav-pills d-flex">
      <li class="nav-item"><a href="/" class="nav-link link-light">Day Task List</a></li>
      <li class="nav-item"><a href="/customers" class="nav-link link-light">Editor</a></li>
      <li class="nav-item"><a href="/customer/0" class="nav-link link-light">New Customer</a></li>
      <li class="nav-item"><a href="/2/customers" class="nav-link link-light">List view</a></li>
      <li class="nav-item"><a href="/management-report" class="nav-link link-light">Management Report</a></li>
      <% if (locals.user && locals.user.roles && locals.user.roles.includes('sysadmin')) { %>
        <li class="nav-item"><a href="/job-templates" class="nav-link link-light">Job Templates</a></li>
        <li class="nav-item"><a href="/admin/customers/import" class="nav-link link-light">Customer Import</a></li>
        <li class="nav-item"><a href="/admin/users" class="nav-link link-light">Manage Users</a></li>
        <li class="nav-item"><a href="/demo/rules" class="nav-link link-light" style="color: #ffc107 !important;">ðŸ§ª Rule Engine Demo</a></li>
      <% } %>
      <li class="nav-item"><a href="/logout" class="nav-link link-light">Log Out</a></li>
    </ul>


    <% if (locals.user) { %>
      <div class="d-flex align-items-center">
        <select name="roles" id="roles" class="bg-dark" style="color: white; margin-right: 10px;">
          <% if (!locals.user.roles) { %>
            <!-- Default values -->
            <option value="admin">Admin</option>
            <option value="manager">Manager</option>
            <option value="sales">Sales</option>
            <option value="construction">Construction</option>
            <option value="permits">Permits</option>
          <% } else { %>
            <%= locals.user.roles %>
            <% locals.user.roles.split(',').forEach(function(role) { %>
              <option value="<%= role.trim() %>"><%= role.trim().charAt(0).toUpperCase() + role.trim().slice(1) %></option>
            <% }); %>
          <% } %>
        </select>
        <span class="text-white">Welcome, <%= locals.user.display_name %></span>
      </div>
    <% } %>
  </header>
</div>




 <body>

<div id="notification" 
     style="position: fixed; 
            top: 20px; 
            left: 25%; 
            width: 50%; 
            padding: 15px; 
            background: #ff4444; 
            color: white; 
            border-radius: 5px; 
            display: none; 
            z-index: 1000;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
</div>


  
  <script>
    console.log('ha1      ');

    document.addEventListener('DOMContentLoaded', function() {
      const roleDropdown = document.getElementById('roles');
      const editorNavItem = document.querySelector('.nav-item a[href="/customers"]').parentElement;

      function toggleEditorNavItem() {
        if (roleDropdown.value !== 'manager') {
          editorNavItem.style.display = 'none';
        } else {
          editorNavItem.style.display = 'block';
        }
      }

      roleDropdown.addEventListener('change', toggleEditorNavItem);
      toggleEditorNavItem(); // Initial check on page load


      roleDropdown.addEventListener('change', function() {
        const selectedRole = roleDropdown.value;
        const roles = Array.from(roleDropdown.options).map(option => option.value);
        console.log('wr01');

        if (roles.length > 1) {
          const reorderedRoles = [selectedRole, ...roles.filter(role => role !== selectedRole)].join(',');
          console.log('wr02   Rewriting roles with current role as default:', reorderedRoles);
          fetch('/updateRoles', {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json'
            },
            body: JSON.stringify({ roles: reorderedRoles })
          })
          .then(response => response.json())
          .then(data => {
            console.log('wr09     Roles updated:', data);
          })
          .catch(error => {
            console.error('wr8    Error updating roles:', error);
          });
        }
      });



    });



  </script>