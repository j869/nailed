<%- include('../partials/header') %>

views/2/customers.ejs
    <div class="jumbotron text-center">
        <div class="container">
            <!-- Search form -->
            <form action="/2/customers" method="get">
                <input type="text" name="query" placeholder="Search for customers...">
                <button type="submit">Search</button>
            </form>
            <br>
            <hr><br>
            <div class="panel-body">




                <% if (locals.tableData && Array.isArray(locals.tableData) && Array.isArray(locals.statusOrderList)) { %>
                    <%
                        // Create a Set of unique statuses from the dataset
                        const datasetStatuses = new Set(locals.tableData.map(data => data.customer.current_status));
                
                        // Combine with statusOrderList, ensuring no duplicates
                        const combinedStatuses = Array.from(new Set([...datasetStatuses, ...locals.statusOrderList]));
                
                        // Create a lookup map for quick sorting based on statusOrderList
                        const statusOrderMap = locals.statusOrderList.reduce((acc, status, index) => {
                            acc[status] = index; // Assign index based on predefined order
                            return acc;
                        }, {});
                
                        // Sort the combinedStatuses array based on the status order
                        combinedStatuses.sort((a, b) => {
                            const indexA = statusOrderMap[a] ?? Infinity;
                            const indexB = statusOrderMap[b] ?? Infinity;
                            return indexA - indexB;
                        });
                    %>

 
            <% combinedStatuses.forEach(function(status, index) { %>
                <div class="accordion-status-item" draggable="true" ondragstart="dragStart(event, <%= index %>)" ondragover="allowDrop(event)" ondrop="drop(event, <%= index %>)">
                    <h2 class="accordion-header" id="heading<%= index %>">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" 
                            data-bs-target="#collapseStatus<%= index %>"
                            aria-expanded="true" aria-controls="collapseStatus<%= index %>"
                            onclick="console.log('cl1     heading' + <%= index %> + ' ', '<%= status %>')">
                            <strong><%= status %></strong>
                        </button>
                    </h2>

                    <div id="collapseStatus<%= index %>" class="accordion-collapse collapse" 
                        aria-labelledby="heading<%= status %>" data-bs-parent="#yourAccordionId">
                        <div class="accordion-status-body">
                            <table class="table table-condensed ">
                                <thead>
                                    <tr class="table-primary">
                                        <th scope="col">ENum</th>
                                        <th scope="col">Full Name</th>
                                        <th scope="col">Home Address</th>
                                        <th scope="col">Primary Phone</th>
                                        <th scope="col">Primary Email</th>
                                        <th scope="col">Current Status</th>
                                        <th scope="col">Follow-up Date</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    <% if (locals.tableData && Array.isArray(locals.tableData)) { %>
                                        <% locals.tableData.forEach(function(data) { %>
                                            <% if (data.customer.current_status == status) { %>
                                                <tr class="accordion-toggle table-primary" data-toggle="collapse" data-target="#collapseCust<%= data.customer.id %>">
                                                    <td class="editable" contenteditable="true" id="otherContact" data-record-id="<%= data.customer.id %>"><%= data.customer.contact_other %></td>
                                                    <td class="editable" contenteditable="true" id="contactName" data-record-id="<%= data.customer.id %>"><%= data.customer.full_name %></td>
                                                    <td class="editable" contenteditable="true" id="contactAddress" data-record-id="<%= data.customer.id %>"><%= data.customer.home_address %></td>
                                                    <td class="editable" contenteditable="true" id="contactPhone" data-record-id="<%= data.customer.id %>"><%= data.customer.primary_phone %></td>
                                                    <td class="editable" contenteditable="true" id="contactEmail" data-record-id="<%= data.customer.id %>"><%= data.customer.primary_email %></td>
                                                    <td class="editable" contenteditable="true" id="contactStatus" data-record-id="<%= data.customer.id %>"><%= data.customer.current_status %></td>
                                                    <td><%= data.customer.follow_up %></td>
                                                </tr>
                                                <tr>
                                                    <td colspan="12" class="hiddenRow">
                                                        <div class="accordian-body collapse" id="collapseCust<%= data.customer.id %>">
                                                            <table class="table nested-table">
                                                                <thead>
                                                                    <tr class="table-secondary">
                                                                        <th>ID</th>
                                                                        <th>Product Description</th>
                                                                        <th>Enquiry Date</th>
                                                                        <th>Job ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <% data.builds.forEach(function(build) { %>
                                                                        <% if (build) { %>
                                                                            <tr class="accordion-toggle table-secondary" onclick="window.location.href = '/2/build/<%= build.id %>'">
                                                                                <td><%= build.id %></td>
                                                                                <td><%= build.product_description %></td>
                                                                                <td><%= build.enquiry_date %></td>
                                                                                <td><%= build.job_id %></td>
                                                                            </tr>
                                                                        <% } %>
                                                                    <% }); %>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        <% }); %>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } %>



            </div>
        </div>
    </div>
</div>

    


<script>
    let draggedElement = null;

    function dragStart(event) {
        draggedElement = event.target.closest(".accordion-status-item");
        event.dataTransfer.setData("text/plain", draggedElement.dataset.dragDropIndex);
    }

    function allowDrop(event) {
        event.preventDefault();
    }

    function drop(event) {
        event.preventDefault();
        const targetElement = event.target.closest(".accordion-status-item");
        if (!draggedElement || !targetElement || draggedElement === targetElement) return;
        
        const parent = targetElement.parentNode;
        parent.insertBefore(draggedElement, targetElement.nextSibling);
        updateDragDropIndexes();
    }

    function updateDragDropIndexes() {
        const indexes = [];

        document.querySelectorAll(".accordion-status-item").forEach((item, newIndex) => {
            const status = item.querySelector(".accordion-button strong").innerText;
            item.dataset.dragDropIndex = newIndex;
            indexes.push({ index: newIndex, status: status });
        });

        console.log('uso5      indexes', indexes);
        fetch('/updateUserStatusOrder', {
            method: 'POST', // Using POST to send a body
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                userId: <%= locals.user.id %>,     // The user ID
                statusOrder: indexes     // The updated order as a JSON array
            })
        })
        .then(response => {
            if (response.ok) {
                console.log('UserSpecificStatusOrder updated successfully.');
            } else {
                throw new Error('Failed to update UserSpecificStatusOrder.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }


    //add listener to all editable fields.  When field changes, notify the database
    document.addEventListener('DOMContentLoaded', function() {
        console.log("d1   " )
        const editableElements = document.querySelectorAll('.editable');
        editableElements.forEach(function(element) {
            element.addEventListener('dblclick', function(event) {
                console.log("d2   ")
                event.preventDefault();    // Prevent default behavior
                event.target.contentEditable = true;  // Make the element editable
                event.target.focus();    // Set focus to the element
            });
            element.addEventListener('blur', function(event) {
                console.log("d3   ")
                // When the element loses focus, save the updated value
                const newValue = event.target.textContent.trim();
                const fieldID = event.target.id;
                const recordID = event.target.getAttribute('data-record-id');
                // Make an HTTP GET request to the server to update the database
                console.log("d4   ", fieldID, newValue, recordID)
                fetch(`/update?fieldID=${fieldID}&newValue=${newValue}&whereID=${recordID}`)
                    .then(response => {
                        if (response.ok) {
                            console.log('Database updated successfully.');
                        } else {
                            throw new Error('Failed to update database.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    });




</script>

<%- include('../partials/footer') %>