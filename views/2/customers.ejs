<%- include('../partials/header') %>


<style>
.btn-green-slim {
    background-color: #2E8B57; /* Dark green color */
    color: white; /* White text for contrast */
    border: none; /* Remove default button border */
    padding: 4px 8px; /* Reduced padding for a slimline appearance */
    border-radius: 4px; /* Rounded corners */
    text-decoration: none; /* Remove underline from link */
    display: inline-block; /* Ensure proper display */
    text-align: left; /* Align text to the left */
    width: auto; /* Ensure the button width fits the content */
    margin-left: 0; /* Align to the left */
}

.btn-green-slim:hover {
    background-color: #3CB371; /* Slightly lighter green on hover */
    color: white; /* Keep text color white on hover */
}

</style>



    <div class="jumbotron text-center">
        <div class="container">
            <br><br><br>
            <!-- Search form -->
            <form action="/2/customers" method="get">
                <input type="text" name="query" placeholder="Search for customers...">
                <button type="submit">Search</button>
            </form>
            <br>
            <hr><br>
            <div class="panel-body">




                <% if (locals.tableData && Array.isArray(locals.tableData) && Array.isArray(locals.statusOrderList)) { %>
                    <%
                        // Create a Set of unique statuses from the dataset
                        const datasetStatuses = new Set(locals.tableData.map(data => data.customer.current_status));
                
                        // Combine with statusOrderList, ensuring no duplicates
                        const combinedStatuses = Array.from(new Set([...datasetStatuses, ...locals.statusOrderList]));
                
                        // Create a lookup map for quick sorting based on statusOrderList
                        const statusOrderMap = locals.statusOrderList.reduce((acc, status, index) => {
                            acc[status] = index; // Assign index based on predefined order
                            return acc;
                        }, {});
                
                        // Sort the combinedStatuses array based on the status order
                        combinedStatuses.sort((a, b) => {
                            const indexA = statusOrderMap[a] ?? Infinity;
                            const indexB = statusOrderMap[b] ?? Infinity;
                            return indexA - indexB;
                        });
                    %>

 
            <% combinedStatuses.forEach(function(status, index) { %>
                <div class="accordion-status-item" draggable="true" ondragstart="dragStart(event, <%= index %>)" ondragover="allowDrop(event)" ondrop="drop(event, <%= index %>)">
                    <h2 class="accordion-header" id="heading<%= index %>">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" 
                            data-bs-target="#collapseStatus<%= index %>"
                            aria-expanded="false" aria-controls="collapseStatus<%= index %>"
                            onclick="console.log('cl1     heading' + <%= index %> + ' ', '<%= status %>')">
                            <strong class="fs-4"><%= status %></strong>
                        </button>
                    </h2>

                    <div id="collapseStatus<%= index %>" class="accordion-collapse collapse" 
                        aria-labelledby="heading<%= status %>" data-bs-parent="#yourAccordionId">
                        <div class="accordion-status-body">
                            <table class="table table-condensed ">
                                <thead>
                                    <tr class="table-primary">
                                        <th style="background-color:#77dd7783;" scope="col">Job#</th>
                                        <th style="background-color:#77dd7783;" scope="col">Full Name</th>
                                        <th style="background-color:#77dd7783;" scope="col">Build Address</th>
                                        <th style="background-color:#77dd7783;" scope="col">Primary Phone</th>
                                        <th style="background-color:#77dd7783;" scope="col">Primary Email</th>
                                        <th style="background-color:#77dd7783;" scope="col">Current Status</th>
                                        <th style="background-color:#77dd7783;" scope="col">Follow-up Date</th>
                                        <th style="background-color:#77dd7783;" scope="col">Actions</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    <% if (locals.tableData && Array.isArray(locals.tableData)) { %>
                                        <% locals.tableData.forEach(function(data) { %>
                                            <% if (data.customer.current_status == status) { %>
                                                <tr class="accordion-toggle table-primary" data-toggle="collapse" data-target="#collapseCust<%= data.customer.id %>">
                                                    <td style="background-color:#77DD77;" class="editable" id="customCustomerCode" data-record-id="<%= data.customer.id %>"><%= data.customer.custom_id %></td>
                                                    <td style="background-color:#77DD77;" class="editable" id="contactName" data-record-id="<%= data.customer.id %>"><%= data.customer.full_name %></td>
                                                    <td style="background-color:#77DD77;" class="editable" id="contactAddress" data-record-id="<%= data.customer.id %>"><%= data.customer.home_address %></td>
                                                    <td style="background-color:#77DD77;" class="editable" id="contactPhone" data-record-id="<%= data.customer.id %>"><%= data.customer.primary_phone %></td>
                                                    <td style="background-color:#77DD77;" class="editable" id="contactEmail" data-record-id="<%= data.customer.id %>"><%= data.customer.primary_email %></td>
                                                    <td style="background-color:#77DD77;" class="editable" id="contactStatus" data-record-id="<%= data.customer.id %>"><%= data.customer.current_status %></td>
                                                    <td style="background-color:#77DD77;" class="editable" id="customerFollowUpDate" data-record-id="<%= data.customer.id %>"><%= data.customer.follow_up %></td>
                                                    <td style="background-color:#77DD77;" id="actions" >
                                                        <a href="/customer/<%= data.customer.id %>" class="btn btn-green-slim"><i class="fas fa-edit"></i> </a>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan="12" class="hiddenRow">
                                                        <div class="accordian-body collapse" id="collapseCust<%= data.customer.id %>">
                                                            <table class="table nested-table">
                                                                <thead>
                                                                    <tr class="table-secondary">
                                                                        <th>ID</th>
                                                                        <th>Product Description</th>
                                                                        <th>Enquiry Date</th>
                                                                        <th>Job ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    
                                                                    <% data.builds.forEach(function(build) { %>
                                                                        <% if (build) { %>
                                                                            <tr class="accordion-toggle table-secondary" onclick="window.location.href = '/2/build/<%= build.id %>'">
                                                                                <td><%= build.id %></td>
                                                                                <td><%= build.product_description %></td>
                                                                                <td><%= build.enquiry_date %></td>
                                                                                <td><%= build.job_id %></td>
                                                                            </tr>
                                                                        <% } %>
                                                                    <% }); %>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        <% }); %>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } %>



            </div>
        </div>
    </div>
</div>

    
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Add click event listeners to all accordion headers
    document.querySelectorAll('.accordion-toggle').forEach(function(header) {
        header.addEventListener('click', function() {
            
            // Get the customer ID from the data-target attribute
            var customerId = this.getAttribute('data-target').replace('#collapseCust', '');

            // Find the builds for the current customer
            var builds = document.querySelectorAll('#collapseCust' + customerId + ' .nested-table tbody tr');

            // Check the number of builds
            if (builds.length === 1) {
                // Get the build ID from the first build row
                var buildId = builds[0].querySelector('td:first-child').textContent;

                // Navigate to the build link
                window.location.href = '/2/build/' + buildId;
            }
        
        });
    });
});



let draggedElement = null;

    function dragStart(event) {
        draggedElement = event.target.closest(".accordion-status-item");
        event.dataTransfer.setData("text/plain", draggedElement.dataset.dragDropIndex);
    }

    function allowDrop(event) {
        event.preventDefault();
    }

    function drop(event) {
        event.preventDefault();
        const targetElement = event.target.closest(".accordion-status-item");
        if (!draggedElement || !targetElement || draggedElement === targetElement) return;
        
        const parent = targetElement.parentNode;
        parent.insertBefore(draggedElement, targetElement.nextSibling);
        updateDragDropIndexes();
    }

    function updateDragDropIndexes() {
        const indexes = [];

        document.querySelectorAll(".accordion-status-item").forEach((item, newIndex) => {
            const status = item.querySelector(".accordion-button strong").innerText;
            item.dataset.dragDropIndex = newIndex;
            indexes.push({ index: newIndex, status: status });
        });

        console.log('uso5      indexes', indexes);
        fetch('/updateUserStatusOrder', {
            method: 'POST', // Using POST to send a body
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                userId: <%= locals.user.id %>,     // The user ID
                statusOrder: indexes     // The updated order as a JSON array
            })
        })
        .then(response => {
            if (response.ok) {
                console.log('UserSpecificStatusOrder updated successfully.');
            } else {
                throw new Error('Failed to update UserSpecificStatusOrder.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }


    //add listener to all editable fields.  When field changes, notify the database
    document.addEventListener('DOMContentLoaded', function() {
        // console.log("cud1   " )
        return;   //has bugs causes system to crash. add feedback loop and notify when error occurs
        
        const editableElements = document.querySelectorAll('.editable');
        editableElements.forEach(function(element) {
            element.addEventListener('dblclick', function(event) {
                // console.log("cud2   ")
                event.preventDefault();    // Prevent default behavior
                event.target.contentEditable = true;  // Make the element editable
                event.target.focus();    // Set focus to the element
            });
            element.addEventListener('blur', function(event) {
                // console.log("cud3   ")
                // When the element loses focus, save the updated value
                const newValue = event.target.textContent.trim();
                const fieldID = event.target.id;
                const recordID = event.target.getAttribute('data-record-id');
                // Make an HTTP GET request to the server to update the database
                const encodedNewValue = encodeURIComponent(newValue);
                console.log("cud4   USER changed [" + fieldID + "] to [" + newValue + "] where ID=["+ recordID + "]" );
                fetch(`/update?fieldID=${fieldID}&newValue=${encodedNewValue}&whereID=${recordID}`)
                    .then(response => {
                        if (response.ok) {
                            console.log('cud9    Database updated successfully.');
                        } else {
                            throw new Error('cud8    Failed to update database.');
                        }
                    })
                    .catch(error => {
                        console.error('cud81    Error:', error);
                    });
            });
        });
    });




</script>

views/2/customers.ejs   <br>

<%- include('../partials/footer') %>