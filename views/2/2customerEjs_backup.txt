                                                                                                                                    <td>
                                                                                                                                        <div class="form-check">
                                                                                                                                            <input class="form-check-input task-checkbox" type="checkbox" id="taskComplete<%= task.id %>" data-task-id="<%= task.id %>" <% if (task.current_status === 'complete') { %> checked <% } %>> 
                                                                                                                                            <label class="form-check-label" for="taskComplete<%= task.id %>"> </label>
                                                                                                                                        </div>
                                                                                                                                    </td>       







        $(document).ready(function() {
            console.log("a1   ");
            // Add click event listener to the checkbox with class 'task-checkbox'
            $('.task-checkbox').click(function() {
                // Get the task ID from the data attribute
                var taskId = $(this).data('task-id');
                console.log("a2   ", taskId);
                // Determine if checkbox is checked
                var isChecked = $(this).prop('checked');
                console.log("a3   ", isChecked);
                var label = $(this).next('label');
                // Send API request to update task status
                $.ajax({
                    url: '<%= locals.baseUrl %>/taskComplete', 
                    method: 'POST', 
                    data: {
                        taskId: taskId,
                        status: isChecked
                    },
                    success: function(response) {
                        // Handle success response if needed
                        console.log('a9    Task status updated successfully');
                        if (isChecked) {
                            label.text('Done');
                        } else {
                            label.text('');
                        }                        
                    },
                    error: function(xhr, status, error) {
                        // Handle error response if needed
                        console.error('a8    Error updating task status:', error);
                    }
                });
            });
        });

        $(document).ready(function() {
            console.log("b1     USER changed status of job");
            // Add click event listener to the checkbox with class 'job-checkbox'
            $('.job-checkbox').click(function() {
                // Get the job ID from the data attribute
                var jobId = $(this).data('job-id');
                // console.log("b2   ", jobId);
                // Determine if checkbox is checked
                var isChecked = $(this).prop('checked');
                // console.log("b3   ", isChecked);
                // Send API request to update job status
                $.ajax({
                    url: '<%= locals.baseUrl %>/jobComplete', 
                    method: 'POST', 
                    data: {
                        jobId: jobId,
                        status: isChecked
                    },
                    success: function(response) {
                        // Handle success response if needed
                        console.log('b9    job(' + jobId + ') status updated to ' + isChecked + ' successfully');
                    },
                    error: function(xhr, status, error) {
                        // Handle error response if needed
                        console.error('b8    Error updating job status:', error);
                    }
                });
            });
        });




        //app.js routes

        
app.post("/taskComplete", async (req, res) => {
  try {
      console.log("ta1    USER changed task status ", req.body);
      const taskID = req.body.taskId;
      const status = req.body.status;    //string 'true' or 'false'

      // Fetch the current status of the task from the database
      const result = await db.query("SELECT current_status FROM tasks WHERE id = $1", [taskID]);
      console.log("ta11   ", result.rows[0]);
      const result2 = await db.query("SELECT current_status FROM jobs WHERE id = $1", [taskID]);
      console.log("ta11   ", result2.rows[0]);
      const currentStatus = result.rows[0].current_status;

      // Update logic based on currentStatus and status values
      let newStatus;
      let newCompleteDate;
      let newCompleteBy;
      if (status === 'true') {
          // console.log("ta2");
          // if (currentStatus === null || currentStatus === 'pending') {
          //     newStatus = 'active';
          // } else if (currentStatus === 'active') {
          //     newStatus = 'complete';
          // }
          newStatus = 'complete';
          newCompleteDate = new Date();
          newCompleteBy = req.user.id;
      } else {
        // console.log("ta3");
        // If status is not 'true', keep the current status unchanged
          newStatus = 'pending';
          newCompleteDate = null;
          newCompleteBy = req.user.id;
      }

      // Update the tasks table in your database
      const updateResult = await db.query("UPDATE tasks SET current_status = $1, completed_date = $3, completed_by = $4 WHERE id = $2", [newStatus, taskID, newCompleteDate, newCompleteBy]);
      // console.log("ta4");

      // Check if the update was successful
      if (updateResult.rowCount === 1) {
          const q4 = await db.query(`DELETE FROM worksheets WHERE description LIKE '%' || '"task_id":' || $1 || ',' || '%'`,[taskID]);
          console.log(`ta9      Task ${taskID} status updated to ${newStatus}`);
          res.status(200).json({ message: `Task ${taskID} status updated to ${newStatus}` });
      } else {
          console.log(`ta8     Task ${taskID} not found or status not updated`);
          res.status(404).json({ error: `Task ${taskID} not found or status not updated` });
      }
  } catch (error) {
      console.error("ta84     Error updating task status:", error);
      res.status(500).json({ error: "Internal Server Error" });
  }
});


app.post("/jobComplete", async (req, res) => {
  console.log("tb1      USER is updating status", req.body);
  try {
    const jobID = req.body.jobId;
    const status = req.body.status;    //string 'true' or 'false'

    // Fetch the current status of the job from the database
    const result = await db.query("SELECT current_status FROM jobs WHERE id = $1", [jobID]);
    const currentStatus = result.rows[0].current_status;

    // Update logic based on currentStatus and status values
    // Update logic based on currentStatus and status values
    let newCompleteDate;
    let newCompleteBy;
    let newStatus;
    if (status === 'true') {
        newCompleteDate = new Date();
        newStatus = 'complete';
    } else {
        newCompleteDate = null;  
        newStatus = 'pending';
    }
    newCompleteBy = req.user.id || 1;


    // Update the jobs table in your database
    // console.log("tb2   ", newStatus, jobID);
    const updateResult = await db.query("UPDATE jobs SET current_status = $1, completed_date = $3, completed_by = $4  WHERE id = $2", [newStatus, jobID, newCompleteDate, newCompleteBy]);

    // Check if the update was successful
    if (updateResult.rowCount === 1) {
        // update the status of all child tasks 
        // console.log("tb71      ", jobID, newStatus);  
    //  const result = await db.query(`UPDATE tasks SET current_status = $2 WHERE job_id = $1`, [jobID, newStatus]);
        const result = await db.query("UPDATE tasks SET current_status = $1, completed_date = $3, completed_by = $4 WHERE job_id = $2", [newStatus, jobID, newCompleteDate, newCompleteBy]);
        // console.log("tb72      ", result.rowCount);  
        res.status(200).json({ message: `job ${jobID} status updated to ${newStatus}` });
        console.log(`tb9   job ${jobID} status updated to ${newStatus}`);

    } else {
        console.log(`tb8     job ${jobID} not found or status not updated`);
        res.status(404).json({ error: `job ${jobID} not found or status not updated` });
    }
  } catch (error) {
    console.error("tb84     Error updating job status:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});