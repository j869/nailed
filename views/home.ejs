<%- include('partials/header') %>

    <!-- use for API calls when we want to set status to compelte -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script> 
home.ejs

  <h2>Current Tasks</h2>
  or 'who is going to bite my ass today'
  
  <div class="container">

    <% if (locals.data) { %>
      <% let view = locals.data.view || 0; %>
      
      <button onclick="updateView(0)">Today</button>
      <button onclick="updateView(1)">Tomorrow</button>

    <div class="container">
      <table class="table">

        <tbody>
            <% for (let i in data) { %>
            <tr>
                <td>
                    <form class="item" method="get" action="/2/build/<%= data[i].build_id %>">
                        <button class="update btn btn-primary" type="submit" name="action" value="view" <%= data[i].build_id ? "" : "disabled" %>>View</button>
                    </form>
                </td>
                <td><%= data[i].id %></td>
                <td class="editable"  contenteditable="true" id="daytaskTitle" data-record-id="<%= data[i].id %>"><%= data[i].title %></td>
                <td><%= data[i].description %></td>
                <td class="editable"  contenteditable="true" id="daytaskPerson" data-record-id="<%= data[i].id %>"><%= data[i].user_id %></td>
                <td class="editable"  contenteditable="true" id="daytaskDate" data-record-id="<%= data[i].id %>"><%= data[i].formatted_date %></td>
                <td>
                  <% if (data[i].customer_name == null) { %>
                    <label><input type="checkbox" id="doneCheckbox" data-record-id="<%= data[i].id %>" onchange="handleCheckboxChange(this)"> Done</label>
                  <% } else { %>
                    <% let task_id = 55; %>
                    <% let task_current_status = 'pending'; %>
                      <div class="form-check">
                      <input class="form-check-input task-checkbox" type="checkbox" id="taskComplete<%= data[i].task_id %>" data-task-id="<%= data[i].task_id %>" 
                        <% if (data[i].task_status === 'complete') { %> checked <% } %>
                      > 
                      <label class="form-check-label" for="taskComplete<%= data[i].task_id %>">Done</label>
                    </div>
                  <% } %>
                </td>
                <td>
                  <button class="btn btn-sm btn-outline-secondary" onclick="fetch(`/update?btn=104a&fieldID=daytaskDate&newValue=add_1&whereID=<%= data[i].id %>`)
                    .then(response => {
                        if (response.ok) {
                            console.log('Database updated successfully.');
                        } else {
                            throw new Error('Failed to update database.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });">
                    <i class="bi bi-trash"></i> +1
                  </button>
                  
                  <button class="btn btn-sm btn-outline-secondary" onclick="fetch(`/update?btn=104a&fieldID=daytaskDate&newValue=add_3&whereID=<%= data[i].id %>`)
                    .then(response => {
                        if (response.ok) {
                            console.log('Database updated successfully.');
                        } else {
                            throw new Error('Failed to update database.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });">
                    <i class="bi bi-trash"></i> +3
                  </button>

                  <button class="btn btn-sm btn-outline-secondary" onclick="fetch(`/update?btn=104a&fieldID=daytaskDate&newValue=add_7&whereID=<%= data[i].id %>`)
                    .then(response => {
                        if (response.ok) {
                            console.log('Database updated successfully.');
                        } else {
                            throw new Error('Failed to update database.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });">
                    <i class="bi bi-trash"></i> +7
                  </button>
                </td>
            </tr>
            <% } %>
        </tbody>
    </table>
    </div>

    
    <div class="container mt-4">
      <h3 class="mb-4">Add New Task</h3>
      <form method="POST" action="/" class="bg-light p-4 rounded shadow-sm">
        <div class="mb-3">
          <label for="taskTitle" class="form-label fw-bold">Title</label>
          <input type="text" class="form-control" id="taskTitle" name="title" required>
        </div>
        
        <div class="mb-3">
          <label for="taskPerson" class="form-label fw-bold">Assigned To</label>
          <input type="number" class="form-control" id="taskPerson" name="person" value="<%= user_id %>" required>
        </div>
        
        <div class="mb-4">
          <label for="taskDate" class="form-label fw-bold">Due Date</label>
          <input type="date" class="form-control" id="taskDate" name="date" required>
        </div>
        
        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
          <button type="submit" class="btn btn-success px-4 py-2">
            <i class="bi bi-plus-circle me-2"></i>Add Task
          </button>
        </div>
      </form>
    </div>

    <% } else { %>
      <i class="fas fa-key fa-6x"></i>
      <h1 class="display-3">Tracker</h1>
      <p class="lead">Building by Bryan Customer Relationship Management</p>
      <hr>

      <a class="btn btn-light btn-lg" href="/register" role="button">Register</a>
      <a class="btn btn-dark btn-lg" href="/login" role="button">Login</a>
  
    <% } %>

  </div>

  <form class="item" method="get" action="/daytaskUpdate">
    <button class="update btn btn-primary" type="submit" name="action" value="view" style="float: right;">Update Table</button>
  </form>
  


  <script>
    //set 'add reminder' date = todays date
    document.getElementById('taskDate').value = new Date().toISOString().split('T')[0];

    //add listener to all editable fields.  When field changes, notify the database
    document.addEventListener('DOMContentLoaded', function() {
        console.log("d1   " )
        const editableElements = document.querySelectorAll('.editable');
        editableElements.forEach(function(element) {
            element.addEventListener('dblclick', function(event) {
                console.log("d2   ")
                event.preventDefault();    // Prevent default behavior
                event.target.contentEditable = true;  // Make the element editable
                event.target.focus();    // Set focus to the element
            });
            element.addEventListener('blur', function(event) {
                console.log("d3   ")
                // When the element loses focus, save the updated value
                const newValue = event.target.textContent;
                const fieldID = event.target.id;
                const recordID = event.target.getAttribute('data-record-id');
                // Make an HTTP GET request to the server to update the database
                console.log("d4   ", fieldID, newValue, recordID)
                fetch(`/update?fieldID=${fieldID}&newValue=${newValue}&whereID=${recordID}`)
                    .then(response => {
                        if (response.ok) {
                            console.log('Database updated successfully.');
                        } else {
                            throw new Error('Failed to update database.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    });


    const view = <%= (typeof view !== 'undefined' ? view : 0) %>;// Capture the current view from EJS
    function updateView(newView) {
      // Get the current URL
      const url = new URL(window.location.href);
      console.log("uv1  ", newView); // Debugging log

      if (newView === 1) {
        newView = parseInt(url.searchParams.get('view')) + 1|| 1; // Get the current 'view' parameter, default to 0 if not set
        console.log("uv2  ", newView); // Debugging log
      }

      // Update the 'view' parameter
      url.searchParams.set('view', newView );
      // Reload the page with the updated URL
      window.location.href = url.toString();
    }


      async function handleCheckboxChange(checkbox) {
        console.log('dtd1  '); // Debugging log
        const recordId = checkbox.getAttribute('data-record-id'); // Get the record ID
        const isChecked = checkbox.checked; // Get the checkbox state
        console.log('dtd2    ', recordId);
        console.log('dtd3    ', isChecked);
        try {
          fetch(`/dtDone?id=${recordId}&done=${isChecked}}`)


        } catch (error) {
          console.error("Error updating checkbox:", error); // Handle errors
        }
      }


      $(document).ready(function() {
            console.log("a1   ");
            // Add click event listener to the checkbox with class 'task-checkbox'
            $('.task-checkbox').click(function() {
                // Get the task ID from the data attribute
                var taskId = $(this).data('task-id');
                console.log("a2   ", taskId);
                // Determine if checkbox is checked
                var isChecked = $(this).prop('checked');
                console.log("a3   ", isChecked);
                // Send API request to update task status
                <% let bURL = (typeof data !== 'undefined' && data.baseURL) ? data.baseURL : '' %>
                $.ajax({
                    url: '<%= bURL %>/taskComplete', 
                    method: 'POST', 
                    data: {
                        taskId: taskId,
                        status: isChecked
                    },
                    success: function(response) {
                        // Handle success response if needed
                        console.log('a9    Task status updated successfully');
                    },
                    error: function(xhr, status, error) {
                        // Handle error response if needed
                        console.error('a8    Error updating task status:', error);
                    }
                });
            });
        });

</script>

<%- include('partials/footer') %>
home.ejs